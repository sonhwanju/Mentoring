using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class TestScript : MonoBehaviour
{
    string text = "가나다";
    int[] two = { 1, 2, 3, 4 };

    private void Start()
    {
        //5월 22일 멘토링

        //if문, switch문은 조건이 필요할떄 사용 ( 조건문)
        //분기제어 - continue란 키워드는 해당하는 회차를 건너뛸때 사용하며 break는 그냥 그 반복문/조건문을 탈출하는데 사용한다.
        //for문과 while문을 어떨때 써야할까??
        //for문은 보통 반복횟수가 명확할 때 쓰며 while문은 명확하지 않을때쓴다.
        //while의 파생 문법 do while

        //do
        //{
        //    내용
        //} while (조건);

        //foreach 예시
        //text안에 있는것을 쪼개서 item에 넣는다 (즉 커다란 알맹이를 작은 알맹이로 쪼개서 그 알맹이의 개수만큼 반복을 해줌)
        //foreach (char item in text)
        //{

        //}


        //배열을 선언하기 위해서는 자료형 앞에 대괄호를 붙여주면 됨 (int[] exp = {1,2,3,4};) 값은 이런식으로 중괄호에 넣어주면 된다.
        //배열이란 변수의 집합체라고 볼수있다.
        //배열을 참조하고싶을때에는 변수명[번호]로 할 수 있다. c#에서 첫번째배열을 가리키는 인덱스는 0이기때문에 배열의 첫번째 값을 참조하고 싶을때에는 0으로 해줘야한다.
        //만약 배열의 인덱스가 5까지있는데 6을 참조하게된다면  없는 인덱스를 참조하는 것이기때문에 오류가뜬다.  (IndexOutOfRangeException)
        //배열의 크기(배열 원소의 개수)를 알고싶다면 배열이름.Length를 사용하면된다
        //배열의 크기만 지정해주고 싶다면
        //int[] arr = new int[10];
        //이런식으로 선언해줄수있다.

        //2차원 배열 선언
        //int[,] arr2 = { { 1, 2, 3 }, { 10, 20, 30 } };
        //2차원 배열 참조 
        //int a = arr2[1, 2];

        //3차원 배열 선언
        //int[,,] arr3 = { { { 1, 2, 3 }, { 10, 20, 30 } }, { { 1, 2, 3 }, { 10, 20, 30 } } };
        //3차원 배열 참조

        //int b = arr3[/*첫번째는 2차원 배열을 가리킴 (위를 보면 2차원 배열 2개가 있는데 1번째면 0, 2번쨰면 1이겠죠*/0,
        //             /*두번째는 1차원 배열을 가리킴 (위를 보면 1차원 배열2개가 있는데 1번째면 0, 2번쨰면 1이겠죠*/ 0, /*이제 이건 원소*/0];
        //이제 b는 1을 가리키게 되는겁니다

        //이런게 있다고만 알아두셈.

        //출력은 Debug.Log() 사용하기.
        //문제 1. for문을 사용하여 홀수만 출력하기 (continue 사용)
        for (int i = 1; i <= 10; i++)
        {
            if(i % 2 == 0)
            {
                continue;
            }
            Debug.Log(i);
        }

        //문제 2. for문을 사용하여 1차원 배열의 값을 전부 10으로 바꾸기   

            for (int i = 0; i <= two.Length - 1; i++)
            {
                two[i] = 10;    
            }
    }
}
